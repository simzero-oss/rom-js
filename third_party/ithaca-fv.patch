--- ithaca-fv/src/ITHACA_THIRD_PARTY/splinter/include/spline.h    2022-03-11 21:43:21.991121960 +0100
+++ ithaca-fv/src/ITHACA_THIRD_PARTY/splinter/include/spline.h       2022-03-11 21:37:46.157760966 +0100
@@ -33,12 +33,12 @@
     /*
      * Returns the (1 x numVariables) Jacobian evaluated at x
      */
-    virtual DenseMatrix evalJacobian(DenseVector x) const = 0;
+    //virtual DenseMatrix evalJacobian(DenseVector x) const = 0;

     /*
      * Returns the (numVariables x numVariables) Hessian evaluated at x
      */
-    virtual DenseMatrix evalHessian(DenseVector x) const = 0;
+    //virtual DenseMatrix evalHessian(DenseVector x) const = 0;
 };

 }

--- ithaca-fv/src/ITHACA_THIRD_PARTY/splinter/include/rbfspline.h    2022-03-11 22:03:18.065641510 +0100
+++ ithaca-fv/src/ITHACA_THIRD_PARTY/splinter/include/rbfspline.h 2022-03-03 11:41:02.392239024 +0100
@@ -126,8 +126,8 @@
     double eval(DenseVector x) const;
     double eval(std::vector<double> x) const;

-    DenseMatrix evalJacobian(DenseVector x) const {}; // TODO: implement via RBF_fn
-    DenseMatrix evalHessian(DenseVector x) const {}; // TODO: implement via RBF_fn
+    //DenseMatrix evalJacobian(DenseVector x) const {}; // TODO: implement via RBF_fn
+    //DenseMatrix evalHessian(DenseVector x) const {}; // TODO: implement via RBF_fn
     //    std::vector<double> getDomainUpperBound() const;
     //    std::vector<double> getDomainLowerBound() const;
     DenseMatrix weights;
